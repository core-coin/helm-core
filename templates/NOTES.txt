{{- if and .Values.gocore.account.address .Values.gocore.account.privateKey .Values.gocore.account.secret }}

  1. View the Stats dashboard at:

  {{- if contains "NodePort" .Values.stats.service.type }}
    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "core.fullname" . }}-stats)
    export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
    echo http://$NODE_IP:$NODE_PORT
  {{- else if contains "LoadBalancer" .Values.stats.service.type }}
    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "core.fullname" . }}-stats -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
    echo http://$SERVICE_IP

    NOTE: It may take a few minutes for the LoadBalancer IP to be available.
          You can watch the status of by running 'kubectl get svc -w {{ template "core.fullname" . }}-stats-service'
  {{- else if contains "ClusterIP" .Values.stats.service.type }}
    export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "core.fullname" . }}-ethstats,release={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
    echo "Visit http://127.0.0.1 to use your application"
    kubectl port-forward $POD_NAME 80:80
  {{- end }}

  2. Connect to Gocore transaction nodes (through RPC or WS) at the following IP:

  {{- if contains "NodePort" .Values.gocore.tx.service.type }}
    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "core.fullname" . }}-gocore-tx)
    export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
    echo $NODE_IP:$NODE_PORT
  {{- else if contains "LoadBalancer" .Values.gocore.tx.service.type }}
    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "core.fullname" . }}-gocore-tx -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
    echo $SERVICE_IP

    NOTE: It may take a few minutes for the LoadBalancer IP to be available.
          You can watch the status of by running 'kubectl get svc -w {{ template "core.fullname" . }}-gocore-tx'
  {{- else if contains "ClusterIP" .Values.gocore.tx.service.type }}
    export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "core.name" . }},release={{ .Release.Name }},component=gocore-tx" -o jsonpath="{.items[0].metadata.name}")
    kubectl port-forward $POD_NAME 8545:8545 8546:8546
  {{- end }}

{{- else -}}

##############################################################################
####           ERROR: Gocore Account has not been configured!               ####
##############################################################################

This deployment will be incomplete until a Gocore account is configured.

Once created, run:

    helm upgrade {{ .Release.Name }} \
        --set gocore.account.address=YOUR-CORE-ADDRESS-HERE
        --set gocore.account.privateKey=YOUR-PRIVATE-KEY-HERE
        --set gocore.account.secret=YOUR-SECRET-HERE
        stable/core

{{- end }}
